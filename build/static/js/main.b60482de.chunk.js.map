{"version":3,"sources":["redux/actions/types.js","redux/reducers/calendar/index.js","redux/reducers/index.js","redux/index.js","scripts/dates.js","redux/actions/calendar/index.js","scripts/misc.js","components/CalendarReminders.js","components/CalendarDay.js","components/CalendarMonth.js","components/NewReminderForm.js","components/ModalReminders.js","components/ReminderModal.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["CalendarActionTypes","initialState","dates","dateErr","addSuccess","removeSuccess","addErr","removeErr","reducers","combineReducers","form","formReducer","CalendarReducer","state","arguments","length","undefined","action","type","payload","error","Object","objectSpread","store","createStore","Reducers","compose","applyMiddleware","thunk","getDaysInMonth","month","year","Date","getDate","CalenderActionCreators","getDatesByMonth","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","allReminders","firstDay","daysInMonth","allDates","i","theDate","reminders","wrap","_context","prev","next","localStorage","getItem","JSON","parse","setUTCFullYear","setUTCDate","setUTCMonth","getUTCMonth","getUTCFullYear","getTime","setDate","getUTCDate","push","date","e","stringify","stop","this","_x","apply","addReminder","reminder","dateReminders","_ref2","_callee2","_context2","rawTime","Number","hour","min","setItem","reset","_x2","removeReminder","_ref3","_callee3","_context3","_x3","reorderArray","arr","propToCheck","order","returnArray","propsSet","Set","propsArr","subArrs","map","obj","add","toConsumableArray","sort","reverse","val","thisVal","parseInt","tempArr","subArr","CalendarReminders","theReminders","props","react_default","createElement","className","r","key","style","background","color","substr","trim","Component","CalendarDay","_this$props","blank","handleAdd","onClick","components_CalendarReminders","CalendarMonth","renderDates","_this","index","dayOfWeek","getUTCDay","returnDates","components_CalendarDay","connect","NewReminderForm","handleSubmit","onSubmit","redux_form_es","name","component","value","reduxForm","ModalReminders","display","marginRight","borderRadius","height","width","delete","ReminderModal","renderContent","activeDate","toDateString","components_ModalReminders","handleDelete","components_NewReminderForm","handleSave","initialValues","data","actions","_this$props2","splice","lib_default","isOpen","open","onRequestClose","close","bindActionCreators","Calendar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getData","currentMonth","setState","modalOpen","closeModal","lastMonth","nextMonth","alert","monthNumber","getFullMonthName","components_CalendarMonth","components_ReminderModal","App","es","components_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b60482de.chunk.js","sourcesContent":["export const CalendarActionTypes = {\n    DATES_BY_MONTH: \"DATES_BY_MONTH\",\n    ADD_REMINDER: \"ADD_REMINDER\",\n    REMOVE_REMINDER: \"REMOVE_REMINDER\",\n}","import {CalendarActionTypes} from \"../../actions/types\";\n\nexport const initialState = {\n    dates: [],\n    dateErr: null,\n    addSuccess: false,\n    removeSuccess: false,\n    addErr: null,\n    removeErr: null\n};\n\nexport const CalendarReducer = (state = initialState, action) => {\n    const {type, payload, error} = action;\n    switch (type) {\n        case CalendarActionTypes.DATES_BY_MONTH:\n            if(error) {\n                return {\n                    ...state,\n                    dateErr: error,\n                    addSuccess: false\n                }\n            }\n            return {\n                ...state,\n                dates: payload,\n                dateErr: null,\n                addSuccess: false\n            }\n        case CalendarActionTypes.ADD_REMINDER:\n            if(error) {\n                return {\n                    ...state,\n                    addErr: error,\n                    addSuccess: false,\n                    removeSuccess: false\n                }\n            }\n            return {\n                ...state,\n                addSuccess: true,\n                removeSuccess: false,\n                addErr: null\n            }\n        case CalendarActionTypes.REMOVE_REMINDER:\n            if(error) {\n                return {\n                    ...state,\n                    removeErr: error,\n                    removeSuccess: false,\n                    addSuccess: false,\n                }\n            }\n            return {\n                ...state,\n                removeSuccess: true,\n                addSuccess: false,\n                removeErr: null\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux';\nimport {CalendarReducer} from \"./calendar\";\nimport { reducer as formReducer } from 'redux-form'\n\nconst reducers = combineReducers({\n    form: formReducer,\n    CalendarReducer\n});\n\nexport default reducers;","import {applyMiddleware, createStore, compose} from \"redux\";\nimport Reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n    Reducers,\n    undefined,\n    compose(applyMiddleware(thunk))\n);\n\nexport default store;","export function getDaysInMonth (month, year) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getFullMonthName(monthNumber) {\n    switch(monthNumber) {\n        case 0:\n            return \"January\"\n        case 1:\n            return \"February\"\n        case 2:\n            return \"March\"\n        case 3:\n            return \"April\"\n        case 4:\n            return \"May\"\n        case 5:\n            return \"June\"\n        case 6:\n            return \"July\"\n        case 7:\n            return \"August\"\n        case 8:\n            return \"September\"\n        case 9:\n            return \"October\"\n        case 10:\n            return \"November\"\n        case 11:\n            return \"December\"\n    }\n}","import {CalendarActionTypes} from \"../types\";\nimport {getDaysInMonth} from \"../../../scripts/dates\";\nimport {reset} from 'redux-form';\n\nexport const CalenderActionCreators = {\n    getDatesByMonth: (month, year) => async (dispatch) => {\n        try {\n            let allReminders = localStorage.getItem('reminders')\n            if(!allReminders) allReminders = {}\n            else allReminders = JSON.parse(allReminders)\n            let firstDay = new Date()\n            firstDay.setUTCFullYear(year)\n            firstDay.setUTCDate(1)\n            firstDay.setUTCMonth(month)\n            let daysInMonth = getDaysInMonth(firstDay.getUTCMonth(),firstDay.getUTCFullYear())\n            let allDates = []\n            for(let i = 1; i <= daysInMonth; i++) {\n                let theDate = new Date(firstDay.getTime())\n                theDate.setDate(i)\n                let reminders = allReminders[theDate.getUTCFullYear() + '-' + theDate.getUTCMonth() + '-' + theDate.getUTCDate()]\n                if(!reminders) reminders = []\n                allDates.push({\n                    date: theDate,\n                    reminders})\n            }\n            dispatch({\n                type: CalendarActionTypes.DATES_BY_MONTH,\n                payload: allDates,\n                error: null\n            })\n        } catch (e) {\n            dispatch({\n                type: CalendarActionTypes.DATES_BY_MONTH,\n                error: JSON.stringify(e)\n            })\n        }\n    },\n    addReminder: (reminder, date, dateReminders) => async (dispatch) => {\n        try {\n            let allReminders = localStorage.getItem('reminders')\n            if(!allReminders) allReminders = {}\n            else allReminders = JSON.parse(allReminders)\n            reminder.rawTime = Number(reminder.hour + reminder.min)\n            dateReminders.push(reminder)\n            allReminders[date.getUTCFullYear() + '-' + date.getUTCMonth() + '-' + date.getUTCDate()] = dateReminders\n            localStorage.setItem('reminders', JSON.stringify(allReminders))\n            dispatch(reset('NewReminderForm'))\n            dispatch({\n                type: CalendarActionTypes.ADD_REMINDER,\n                payload: true,\n                error: null\n            })\n        } catch (e) {\n            dispatch({\n                type: CalendarActionTypes.ADD_REMINDER,\n                error: JSON.stringify(e)\n            })\n        }\n    },\n    removeReminder: (reminders, date) => async (dispatch) => {\n        try {\n            let allReminders = localStorage.getItem('reminders')\n            if(!allReminders) allReminders = {}\n            else allReminders = JSON.parse(allReminders)\n            allReminders[date.getUTCFullYear() + '-' + date.getUTCMonth() + '-' + date.getUTCDate()] = reminders\n            localStorage.setItem('reminders', JSON.stringify(allReminders))\n            dispatch({\n                type: CalendarActionTypes.ADD_REMINDER,\n                payload: true,\n                error: null\n            })\n        } catch (e) {\n            dispatch({\n                type: CalendarActionTypes.ADD_REMINDER,\n                error: JSON.stringify(e)\n            })\n        }\n    }\n}","export function reorderArray(arr, propToCheck, order = 1) {\n    //Arr : the array\n    //propToCheck : the property in the object to reorder by\n    //order : sortBy, 1 = highest first, 0 = lowest first\n    let returnArray = []\n    let propsSet = new Set()\n    let propsArr = []\n    let subArrs =[]\n    arr.map(obj => {propsSet.add(obj[propToCheck])})\n    propsArr = [...propsSet]\n    if(order === 1) {\n        propsArr.sort()\n        propsArr.reverse()\n    } else {\n        propsArr.sort()\n    }\n    propsArr.map(val => {\n        subArrs[val] = []\n    })\n    arr.map(obj => {\n        let thisVal = parseInt(obj[propToCheck])\n        let tempArr = subArrs[thisVal] || []\n        tempArr.push(obj)\n        subArrs[thisVal] = tempArr\n    })\n    if(order === 1) {\n        subArrs.reverse()\n    }\n    subArrs.map(subArr => {\n        returnArray.push(...subArr)\n    })\n    return returnArray\n}","import React, {Component} from \"react\"\nimport {reorderArray} from \"../scripts/misc\";\n\nclass CalendarReminders extends Component {\n    render() {\n        let theReminders = reorderArray(this.props.reminders, 'rawTime', 0)\n        return <div className=\"day-reminders\">\n            {theReminders.map(r => {\n                return <div key={r.reminder} className=\"day-reminder\" style={{background:r.color}}>\n                    <span>{r.hour}:{r.min}</span>\n                    <span>{r.reminder.substr(0,5).trim() + (r.reminder.length > 5 ? \"...\" : \"\")}</span>\n                </div>\n            })}\n        </div>\n\n    }\n}\n\nexport default CalendarReminders","import React, {Component} from \"react\"\nimport CalendarReminders from \"./CalendarReminders\";\n\nclass CalendarDay extends Component {\n    render() {\n        const {blank, date, handleAdd} = this.props\n        if(blank) return <div className=\"day-block blank\"/>\n        return <div className=\"day-block\" onClick={() => {handleAdd(date)}}>\n            <span>{date.date.getUTCDate()}</span>\n            <CalendarReminders reminders={date.reminders}/>\n        </div>\n    }\n}\n\nexport default CalendarDay","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\"\nimport CalendarDay from \"./CalendarDay\";\n\nclass CalendarMonth extends Component {\n    renderDates = () => {\n        return this.props.dates.map((date, index) => {\n            let dayOfWeek = date.date.getUTCDay()\n            let returnDates = []\n            if(index === 0 && dayOfWeek !== 0) {\n                for(let i = 1; i <= dayOfWeek; i++) {\n                    returnDates.push(<CalendarDay blank key={i}/>)\n                }\n            }\n            returnDates.push(<CalendarDay key={date} date={date} handleAdd={this.props.handleAdd}/>)\n            return returnDates\n        })\n    }\n\n    render() {\n        return <div className=\"month\">\n            {this.renderDates()}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dates: state.CalendarReducer.dates,\n});\n\n\nexport default connect(mapStateToProps, null)(CalendarMonth)","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nlet NewReminderForm = props => {\n    const { handleSubmit } = props\n    return (\n        <form onSubmit={handleSubmit} className=\"row\">\n            <div className=\"col-md-2\">\n                <label>Hour</label>\n                <Field name=\"hour\" component=\"select\" className=\"form-control\">\n                    <option value=\"0\">00</option>\n                    <option value=\"1\">01</option>\n                    <option value=\"2\">02</option>\n                    <option value=\"3\">03</option>\n                    <option value=\"4\">04</option>\n                    <option value=\"5\">05</option>\n                    <option value=\"6\">06</option>\n                    <option value=\"7\">07</option>\n                    <option value=\"8\">08</option>\n                    <option value=\"9\">09</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"11\">11</option>\n                    <option value=\"12\">12</option>\n                    <option value=\"13\">13</option>\n                    <option value=\"14\">14</option>\n                    <option value=\"15\">15</option>\n                    <option value=\"16\">16</option>\n                    <option value=\"17\">17</option>\n                    <option value=\"18\">18</option>\n                    <option value=\"19\">19</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"21\">21</option>\n                    <option value=\"22\">22</option>\n                    <option value=\"23\">23</option>\n                </Field>\n            </div>\n            <div className=\"col-md-2\">\n                <label>Min</label>\n                <Field name=\"min\" component=\"select\" className=\"form-control\">\n                    <option value=\"0\">00</option>\n                    <option value=\"15\">15</option>\n                    <option value=\"30\">30</option>\n                    <option value=\"45\">45</option>\n                </Field>\n            </div>\n            <div className=\"col-md-5\">\n                <label>Reminder</label>\n                <Field name=\"reminder\" component=\"input\" type=\"text\" className=\"form-control\"/>\n            </div>\n            <div className=\"col-md-3\">\n                <label>Colour</label>\n                <Field name=\"color\" component=\"select\" className=\"form-control\">\n                    <option value=\"ForestGreen\">Green</option>\n                    <option value=\"Firebrick\">Red</option>\n                    <option value=\"Coral\">Orange</option>\n                    <option value=\"RoyalBlue\">Blue</option>\n                </Field>\n            </div>\n            <div className=\"col-md-3 mt-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            </div>\n        </form>\n    )\n}\n\nNewReminderForm = reduxForm({\n    // a unique name for the form\n    form: 'NewReminderForm'\n})(NewReminderForm)\n\nexport default NewReminderForm","import React, {Component} from \"react\"\nimport {reorderArray} from \"../scripts/misc\";\n\nclass ModalReminders extends Component {\n    render() {\n        let theReminders = reorderArray(this.props.reminders, 'rawTime', 0)\n        return <div className=\"modal-reminders\">\n            {theReminders.map((r, index) => {\n                return <div className=\"modal-reminder row\" key={r}>\n                    <div className=\"col-2\">\n                        <span style={{display:'inline-block', marginRight: 5, background:r.color, borderRadius: '50%', height: 10, width: 10}}/>\n                        {r.hour}:{r.min}\n                    </div>\n                    <span className=\"col-6\">{r.reminder}</span>\n                    <span className=\"col-4 delete\" onClick={() => this.props.delete(index, theReminders)}>Delete</span>\n                </div>\n            })}\n        </div>\n\n    }\n}\n\nexport default ModalReminders","import React, {Component} from \"react\"\nimport Modal from \"react-modal\";\nimport NewReminderForm from \"./NewReminderForm\";\nimport {bindActionCreators} from \"redux\";\nimport {CalenderActionCreators} from \"../redux/actions/calendar\";\nimport connect from \"react-redux/es/connect/connect\";\nimport ModalReminders from \"./ModalReminders\";\n\nclass ReminderModal extends Component {\n    renderContent = () => {\n        if(this.props.activeDate) {\n            return <div>\n                    <h3>{this.props.activeDate.date.toDateString()}</h3>\n                    <hr/>\n                {this.props.activeDate.reminders.length > 0 && <div>\n                    <h4>All Reminders</h4>\n                    <ModalReminders reminders={this.props.activeDate.reminders} delete={this.handleDelete}/>\n                    <hr/>\n                </div>}\n                <div>\n                    <h4>New Reminder</h4>\n                    <NewReminderForm onSubmit={this.handleSave} initialValues={{hour: \"10\", min: \"15\", color: \"ForestGreen\"}}/>\n                </div>\n            </div>\n        }\n        return null\n    }\n\n    handleSave = data => {\n        const {actions, activeDate} = this.props\n        actions.addReminder(data, activeDate.date, activeDate.reminders)\n    }\n\n    handleDelete = (index, reminders) => {\n        const {actions, activeDate} = this.props\n        reminders = [...reminders]\n        reminders.splice(index, 1)\n        actions.removeReminder(reminders, activeDate.date)\n    }\n\n    render() {\n        return <Modal\n            className=\"reminder-modal\"\n            isOpen={this.props.open}\n            onRequestClose={this.props.close}>\n            {this.renderContent()}\n        </Modal>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dates: state.CalendarReducer.dates,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(CalenderActionCreators, dispatch),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReminderModal)","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {CalenderActionCreators} from \"../redux/actions/calendar\";\nimport CalendarMonth from \"./CalendarMonth\";\nimport ReminderModal from \"./ReminderModal\";\nimport {getFullMonthName} from \"../scripts/dates\";\n\nclass Calendar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            currentMonth: new Date(),\n            modalOpen: false,\n            activeDate: null\n        }\n    }\n\n    componentWillMount() {\n        this.getData()\n    }\n\n    componentWillReceiveProps(props) {\n        const {actions} = props\n        if(props.addSuccess || props.removeSuccess) {\n            actions.getDatesByMonth(this.state.currentMonth.getUTCMonth())\n            this.closeModal()\n        }\n\n        if(props.addErr || props.removeErr) {\n            alert(\"Something went wrong. Try again later\")\n        }\n    }\n\n    getData = () => {\n        const {actions} = this.props\n        actions.getDatesByMonth(this.state.currentMonth.getUTCMonth(), this.state.currentMonth.getUTCFullYear())\n    }\n\n    handleAdd = activeDate => {\n       this.setState({modalOpen: true, activeDate})\n    }\n\n    closeModal = () => {\n        this.setState({modalOpen: false, activeDate: null})\n    }\n\n    lastMonth = () => {\n        let currentMonth = new Date(this.state.currentMonth)\n        currentMonth.setUTCMonth(currentMonth.getUTCMonth() - 1)\n        this.setState({currentMonth})\n        this.setState({currentMonth}, () => {\n            this.getData()\n        })\n    }\n\n    nextMonth = () => {\n        let currentMonth = new Date(this.state.currentMonth)\n        currentMonth.setUTCMonth(currentMonth.getUTCMonth() + 1)\n        this.setState({currentMonth}, () => {\n            this.getData()\n        })\n    }\n\n    render() {\n        const {currentMonth} = this.state\n        return <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    <h1>{getFullMonthName(currentMonth.getUTCMonth()) + ' ' + currentMonth.getUTCFullYear()}</h1>\n                </div>\n                <div className=\"col-2\" onClick={this.lastMonth}>\n                    <span>Prev Month</span>\n                </div>\n                <div className=\"col-2\" onClick={this.nextMonth}>\n                    <span>Next Month</span>\n                </div>\n            </div>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <div className=\"day-name\">\n                        <span>Sunday</span>\n                    </div>\n                    <div className=\"day-name\">\n                        <span>Monday</span>\n                    </div>\n                    <div className=\"day-name\">\n                        <span>Tuesday</span>\n                    </div>\n                    <div className=\"day-name\">\n                        <span>Wednesday</span>\n                    </div>\n                    <div className=\"day-name\">\n                        <span>Thursday</span>\n                    </div>\n                    <div className=\"day-name\">\n                        <span>Friday</span>\n                    </div>\n                    <div className=\"day-name\">\n                        <span>Saturday</span>\n                    </div>\n                </div>\n                <div className=\"card-body\">\n                    <CalendarMonth handleAdd={this.handleAdd}/>\n                </div>\n            </div>\n            <ReminderModal open={this.state.modalOpen} close={this.closeModal} activeDate={this.state.activeDate}/>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dates: state.CalendarReducer.dates,\n    addSuccess: state.CalendarReducer.addSuccess,\n    removeSuccess: state.CalendarReducer.removeSuccess,\n    addErr: state.CalendarReducer.addErr,\n    removeErr: state.CalendarReducer.removeErr,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(CalenderActionCreators, dispatch),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar)","import React, { Component } from 'react';\nimport './App.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux\";\nimport Calendar from \"./components/Calendar\";\n\nclass App extends Component {\n  render() {\n    return (<Provider store={store}><Calendar/></Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}